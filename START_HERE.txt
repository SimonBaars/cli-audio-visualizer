================================================================================
                    CLI AUDIO VISUALIZER v2.1
                 NOW WITH REAL SYSTEM AUDIO CAPTURE!
================================================================================

✅ THE REAL FIX IS NOW APPLIED!

The code now properly uses your monitor source via the PULSE_SOURCE
environment variable. This is the correct way to capture system audio
on Linux with PipeWire/PulseAudio.

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

STEP 1: TEST IT (IMPORTANT!)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

First, let's verify it's working:

    source venv/bin/activate
    python test_audio.py

🎵 PLAY SOME MUSIC DURING THE TEST!

You should see:
  ✓ Found monitor source: alsa_output.pci-0000_65_00.6.analog-stereo.monitor
  ✓ Set PULSE_SOURCE environment variable
  ✓ Using audio server: pipewire
  ✓ Capturing system audio

And when music plays:
  Audio: ████████████████ 0.012345

If the bars move with your music → IT'S WORKING! Go to Step 2.
If not → See TROUBLESHOOTING below.

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

STEP 2: RUN THE VISUALIZER
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

    python visualizer_stable.py

Look for:
  ✓ Capturing system audio
  ✓ Source: alsa_output.pci-0000_65_00.6.analog-stereo.monitor

🎵 Play music and watch the bars dance!

Controls:
  SPACE    - Change visualization mode (bars → spectrum → waveform → blocks)
  Q or ESC - Quit

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

WHAT WAS FIXED
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ Now properly sets PULSE_SOURCE environment variable
✅ Uses PipeWire device (which respects PULSE_SOURCE)
✅ Captures system audio (not microphone!)
✅ No more "Waiting for audio" flashing
✅ Smoother visualization with larger buffer
✅ No terminal hangs

See REAL_FIX.md for technical details.

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

TROUBLESHOOTING
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Problem: "Audio level is very low"
Solution: Turn up your system volume! The monitor captures at the current
          output level.

Problem: "Bars barely move"
Solution: 1. Check system volume is up
          2. Try bass-heavy music (shows better than speech)
          3. The visualization auto-scales, give it a moment

Problem: "Still says capturing from microphone"
Solution: Check the exact output. It should say:
          "✓ Capturing system audio"
          If not, try:
          export PULSE_SOURCE=alsa_output.pci-0000_65_00.6.analog-stereo.monitor
          python visualizer_stable.py

Problem: "Terminal is glitchy"
Solution: This should be fixed now! But if not:
          - Make sure you're using visualizer_stable.py
          - Try a different terminal (kitty, alacritty)
          - Resize the terminal to trigger redraw

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

QUICK REFERENCE
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Test:      python test_audio.py
Run:       python visualizer_stable.py
Help:      cat REAL_FIX.md

Modes:     SPACE to cycle (bars, spectrum, waveform, blocks)
Quit:      Q or ESC

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

YOUR SYSTEM
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Audio System: PipeWire
Monitor Source: alsa_output.pci-0000_65_00.6.analog-stereo.monitor
Status: ✅ Detected and configured

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

TL;DR
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. source venv/bin/activate
2. python test_audio.py           # Play music during test!
3. python visualizer_stable.py    # Enjoy!

================================================================================